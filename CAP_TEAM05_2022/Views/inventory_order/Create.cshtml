@model CAP_TEAM05_2022.Models.inventory_order
@using Constants = CAP_TEAM05_2022.Helper.Constants

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout_QuyThanh.cshtml";

}
<link href="~/Content/css/custom-css.css" rel="stylesheet" />
<section class="pcoded-main-container">
    <div class="pcoded-content">
        <div class="page-header">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-12">
                        <div class="page-header-title">
                            <h5 class="m-b-10">Tạo đơn nhập hàng</h5>
                        </div>
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="https://tancool.net">
                                    <i class="feather icon-home">
                                    </i>
                                </a>
                            </li>
                            <li class="breadcrumb-item">
                                <a href="@Url.Action("Index", "inventory_order")">
                                   Quản lý nhập hàng
                                </a>
                            </li>
                            <li class="breadcrumb-item">
                                <a href="javascript:void(0)">Tạo đơn nhập hàng</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h5>Tạo đơn nhập hàng</h5>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("Create", "inventory_order", FormMethod.Post, new { @novalidate = "novalidate", @class= "InventoryOrderForm" }))
                        {
                            //@Html.ValidationSummary()
                            @Html.AntiForgeryToken()
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label class="form-label">Nhà cung cấp</label>
                                        @if ((bool)ViewBag.isCreate)
                                        {
                                            @Html.DropDownListFor(model => model.supplier_id, (SelectList)ViewBag.Customer, "---- Chọn công ty ----", new { @class = "form-control", @id = "Supplier", @aria_label = "Chọn danh mục thiết bị", @required = "required" })
                                        }
                                        @Html.ValidationMessageFor(model => model.supplier_id, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        <label class="floating-label" for="Text">Phương thức thanh toán</label>
                                        <div>
                                            <div class="form-check form-check-inline">
                                                <input type="radio" class="form-control-lg" name="method" value="@Constants.PAYED_ORDER" onclick="Method1();" checked>
                                                <label class="form-check-label" for="Subject">Đã thanh toán</label>
                                            </div>
                                            <div class="form-check form-check-inline">
                                                <input type="radio" class="form-control-lg" name="method" value="@Constants.DEBT_ORDER" onclick="Method2();">
                                                <label class="form-check-label" for="Subject">Ghi nợ</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6 debt_method">
                                    <div class="form-group">
                                        <label class="form-label">Tổng hóa đơn: </label>
                                        <input type="text" class="form-control" disabled id="totalInventory" value="0">
                                    </div>
                                </div>
                                <div class="col-sm-6 debt_method" style="display: none">
                                    <div class="form-group">
                                        <label class="form-label">Thanh toán trước: </label>
                                        <input class="form-control Price text-box single-line" data-val="true"
                                               data-val-length="Vui lòng nhập một giá trị nhỏ hơn hoặc bằng 999,999,999,999"
                                               data-val-length-max="15" data-val-number="Vui lòng nhập số vào giá tiền."
                                               data-val-required="Vui lòng nhập số tiền thanh toán trước !"
                                               id="Repayment" name="Repayment" pattern="[0-9.,]+" placeholder="Nhập số tiền thanh toán trước..." type="text" value="">
                                        @Html.ValidationMessage("Repayment", "", new { @class = "text-danger" })


                                    </div>
                                </div>
                                <div class="table-responsive" id="dataContainer">
                                    <div class="card-body table-border-style">
                                        <div class="table-responsive">
                                            <div>
                                                <div class="alert alert-danger text-center">
                                                    <p>Vui lòng chọn công ty cung cấp để có thể thực hiện chức năng</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <a type="button" class="btn btn-secondary" href="@Url.Action("Index", "inventory_order")">Quay lại</a>
                                <button type="submit" class="btn btn-primary  float-end">Lưu</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

    </div>
</section>
<div id="scriptContainer">
</div>
@section scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript">
        $('.InventoryOrderForm').submit(function (e) {
            var form = $(this);
            var _this = $(this);
            var _form = _this.closest("form");
            var isvalid = _form.valid()
            // Check if form is valid then submit ajax
            if (isvalid) {
                e.preventDefault();
                var url = form.attr('action');
                $('.modal').modal('hide');
                Swal.fire({
                    title: 'Bạn chắc chắn đãn kiểm tra đúng dữ liệu ?',
                    text: "Bạn không thể hoàn nguyên nếu có sai sót trong quá trình nhập hàng !",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Xác nhận'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: url,
                            type: 'POST',
                            data: form.serialize(),
                            success: function (data) {                            
                                if (data.status) {
                                    // Refresh table data
                                    Swal.fire('Thành công !', data.message, 'success')
                                    form[0].reset();
                                    GetCreateDetails(-1);
                                    form.removeClass('was-validated');
                                } else {
                                    Swal.fire('Lỗi !', data.message, 'error')
                                }
                            }
                        });
                    }
                });
            }
        });

    function Method1() {
        $(".debt_method").hide();
    }
    function Method2() {
        $(".debt_method").show();
        }

        $("#Supplier").change(function () {
            var supplierId = $("#Supplier").val();
            GetCreateDetails(supplierId)
        });
        function GetCreateDetails(supplierId) {
            $.ajax({
                url: '@Url.Action("CreateDetails", "inventory_order")',
                data: { supplierId: supplierId}
            }).done(function (result) {
                $('#dataContainer').html(result);

            }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                console.log(textStatus)
                console.log(errorThrown)
                Swal.fire('Lỗi !', 'Đã xảy ra lỗi, hãy thử lại sau !', 'error');
            });
        }
    </script>
    <script>
        $('form').validate();
        $.extend($.validator.messages, {
            required: "Không để trống",
        });
    </script>
}




