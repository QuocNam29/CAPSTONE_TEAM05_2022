@model CAP_TEAM05_2022.Models.inventory_order
@using Constants = CAP_TEAM05_2022.Helper.Constants

@{
    int i = 0;
    var check = new SelectList(ViewBag.Product, "Id", "Name");
}
@if (check.Any())
{
    <div class="ovf-table col-sm-12">
        <table class="min-w-600 table table-group-divider">
            <thead>
                <tr>
                    <th>
                        Tên sản phẩm
                    </th>
                    <th>
                        Số lượng
                    </th>
                    <th>
                        Đơn giá nhập
                    </th>
                    <th>
                        Thành tiền
                    </th>
                    <th>
                        Đơn giá bán
                    </th>
                    <th>
                        Đơn giá bán nợ
                    </th>
                    <th><button type="button" class="btn btn-primary feather icon-plus-square" id="addRow"></button></th>
                </tr>
            </thead>
            <tbody>
                @for (int j = 0; j < Model?.import_inventory?.Count; j++)
                {
                    <tr id="rcd[@i]" name="rcd">
                        <td>
                            @Html.DropDownListFor(m => m.import_inventory[i].product_id, new SelectList(ViewBag.Product, "Id", "Name", Model.import_inventory[i].product_id), new { @class = "form-control", @required = "true" })
                        </td>
                        <td>
                            @Html.EditorFor(m => m.import_inventory[i].quantity, new { htmlAttributes = new { @class = "form-control", @required = "true", @onchange = "calculate(this)" } })
                        </td>
                        <td>
                            @Html.EditorFor(m => m.import_inventory[i].price_import, new { htmlAttributes = new { @class = "form-control", @required = "true", @onchange = "calculate(this)" } })
                        </td>
                        <td>
                            <label id="total[@i]" name="totalEq" data-val=@((Model.import_inventory[i].price_import * Model.import_inventory[i].quantity ))>
                                @((Model.import_inventory[i].price_import * Model.import_inventory[i].quantity).ToString("N0")) VNĐ
                            </label>
                        </td>
                        <td>
                            <button type="button" id='@i' class="btn bi-trash delete-row" onclick="deleteRow(this)"></button>
                        </td>
                    </tr>
                    i++;
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="6">
                        <label class="float-end" id="totalReceipt"></label>
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
    <script>
    var count = $('tr[name="rcd"]').length == 0 ? 0 : $('tr[name="rcd"]').length;
        var total = 0;
        function deleteRow(target) {
            var rows = $("table tr[name='rcd']");
            //remove existing row
            $('#rcd\\[' + target.id + '\\]').remove();
            count--
            for (var i = parseInt(target.id) + 1; i < rows.length; i++) {
                //replace tr tag id
                $(rows[i]).attr('id', 'rcd[' + (i - 1) + ']')
                //get all column for one row
                var cols = $(rows[i]).find('td');
                for (var j = 0; j < cols.length; j++) {
                    //get first children then replace the index
                    var childrenIn = $(cols[j]).children().first();
                    //replace only name and id only to not affected other field
                    childrenIn.attr('name', childrenIn.attr('name')?.replace(i, (i - 1)))
                    childrenIn.attr('id', childrenIn.attr('id')?.replace(i, (i - 1)))
                }
            }
            calTotal()
        }
        function calculate(target) {

            //get target id before calculate
            var idToCal = target.id;
            //split to get the index
            var id = idToCal.split('__')[0].split('_')[1];
            //passing id for exact column data use to calculate
            var quantity = $('#importInventory_' + parseInt(id) + '__quantity').val();
            var cost = $('#importInventory_' + parseInt(id) + '__price_import').val().replace(/\,/g, '').replace(/\./g, '');;
            //calculate data
            var truequantity = quantity ? parseInt(quantity) : 0;
            var trueprice_import = cost ? parseFloat(cost) : 0;
            var cal =  truequantity * trueprice_import;
            //set field total for equidment
            $('label[id="total[' + id + ']"]').text(cal.toLocaleString('vn-VN') + ' VNĐ');
            $('label[id="total[' + id + ']"]').attr('data-val', cal)
            //calculate total
            calTotal()

        }
        function calTotal() {
            total = 0;
            //get all total rows
            var rows = $('label[name="totalEq"]');
            for (var i = 0; i < rows.length; i++) {
                total += parseFloat($(rows[i]).attr('data-val'));
            }
            $('#totalReceipt').text("Tổng hoá đơn: "+total.toLocaleString('vn-VN') + ' VNĐ')
            $('#totalInventory').val(total.toLocaleString('vn-VN'))
        }
        $(document).ready(function () {
            // Add new row when the "Add Row" button is clicked
            calTotal()
            $("#addRow").click(function (e) {
                e.preventDefault();
                var newRow = $("<tr id='rcd[" + count + "]' name='rcd'>");
                //get data list from viewbag
                var data = @Html.Raw(Json.Encode(new SelectList(ViewBag.Product, "Id","Name")));

                //add html field
                var cols = "";
                cols += "<td> <select id='importInventory_" + count + "__product_id' name='importInventory[" + count + "].product_id' class='form-control'>";
                $.each(data, function (index, item) {
                    cols+= "<option value='"+item.Value+"'>"+item.Text+"</option>"
                });
                cols += '</select></td>'
                cols += '<td>' + '<input class="form-control text-box single-line"  placeholder="Nhập số lượng" id ="importInventory_' + count + '__quantity" name ="importInventory[' + count +'].quantity" onchange ="calculate(this)" required type ="number" min="1">'+ '</td>';
                cols += '</select></td>'
                cols += '<td>' + ' <input class="form-control text-box single-line Price"  placeholder="Nhập đơn giá" id ="importInventory_' + count + '__price_import"  name ="priceImport[' + count +']" onchange ="calculate(this)" required type ="text">' + '</td>';
                cols += '<td>' + '<label id="total[' + count + ']" name="totalEq" data-val=0>0 VNĐ </label>' + '</td > ';
                cols += '<td>' + ' <input class="form-control text-box single-line Price"  placeholder="Nhập đơn giá bán" name ="saleprice[' + count + ']"  required type ="text" >' + '</td>';
                cols += '<td>' + ' <input class="form-control text-box single-line Price"  placeholder="Nhập đơn giá bán nợ"  name ="debtPrice[' + count + ']" required type ="text" >' + '</td>';
                cols += '<td><button type="button"  id=' + count +' class="btn btn-danger feather icon-trash-2 delete-row" onclick="deleteRow(this)"></button></td>';
                cols += '</tr>'
                newRow.append(cols);
                count++
                $("table").append(newRow);
                $.ajax({
                    url: '@Url.Action("ScriptContainer", "inventory_order")',
                    data: {}
                }).done(function (result) {
                    $('#scriptContainer').html(result);
                    }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(textStatus)
                        console.log(errorThrown)
                        Swal.fire('Lỗi !', 'Đã xảy ra lỗi, hãy thử lại sau !', 'error');
                    });
});
        });
    </script>
}
else
{
    <div class="card-body table-border-style">
        <div class="table-responsive">
            <div>
                <div class="alert alert-warning text-center">
                    <p>Chưa có sản phẩm thuộc nhà cung cấp này</p>
                </div>
            </div>
        </div>
    </div>
}

