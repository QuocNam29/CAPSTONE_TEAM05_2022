@model CAP_TEAM05_2022.Models.StatisticsViewModel
@using Constants = CAP_TEAM05_2022.Helper.Constants;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout_QuyThanh.cshtml";
    DateTime form = ViewBag.From;
    DateTime to = ViewBag.To;

}

<div class="pcoded-main-container">
    <div class="pcoded-content">
        <!-- [ breadcrumb ] start -->
        <div class="page-header">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-12">
                        <div class="page-header-title">
                            <h5 class="m-b-10">Phân tích thống kê</h5>
                        </div>
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="index.html"><i class="feather icon-home"></i></a></li>
                            <li class="breadcrumb-item"><a href="#!">Phân tích thống kê</a></li>
                        </ul>
                    </div>
                </div>
            </div>

        </div>
        <!-- [ breadcrumb ] end -->
        <!-- [ Main Content ] start -->
        <div class="row">

            <div class="col-md-12 col-xl-12">
                <form method="post" action="@Url.Action("Index", "Dashboard")">

                    <div class="card">
                        <div class="card-body">
                            <div class="row mb-3">

                                <div class="row col-md-12">
                                    <div class="col-md-4">
                                        <div class="mx-datepicker">
                                            <div class="mx-input-wrapper">
                                                <input name="from" id="DateStart" class="form-control custom-width flatpickr" value="@String.Format("{0:yyyy-MM-dd}", form)">
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="mx-datepicker">
                                            <div class="mx-input-wrapper">
                                                <input name="to" id="DateEnd" class="form-control custom-width flatpickr" value="@String.Format("{0:yyyy-MM-dd}",to)">
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="float-left">
                                            <button type="submit" id="btn_Submit" class="btn btn-info">Lọc</button>
                                        </div>
                                    </div>


                                </div>

                            </div>
                        </div>
                    </div>
                </form>

            </div>
            <!-- table card-1 start -->
            <div class="col-md-12 col-xl-12">

                <div class="card flat-card">
                    <div class="row-table">
                        <div class="col-sm-3 card-body br">
                            <div class="row">
                                <div class="col-sm-4">
                                    <i class="icon feather icon-users text-c-green mb-1 d-block"></i>
                                </div>
                                <div class="col-sm-8 text-md-center">
                                    <h5>@Model.CountCustomer</h5>
                                    <span>Khách hàng</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3 card-body br">
                            <div class="row">
                                <div class="col-sm-4">
                                    <i class="icon feather icon-inbox text-c-red mb-1 d-block"></i>
                                </div>
                                <div class="col-sm-8 text-md-center">
                                    <h5>@Model.CountSupplier</h5>
                                    <span>Công ty cung cấp</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3 card-body br">
                            <div class="row">
                                <div class="col-sm-4">
                                    <i class="icon feather icon-shopping-cart text-c-blue mb-1 d-blockz"></i>
                                </div>
                                <div class="col-sm-8 text-md-center">
                                    <h5>@Model.CountOrder</h5>
                                    <span>Đơn hàng</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-3 card-body">
                            <div class="row">
                                <div class="col-sm-4">
                                    <i class="icon feather icon-bar-chart-2 text-c-blue mb-1 d-block"></i>
                                </div>
                                <div class="col-sm-8 text-md-center">
                                    <h5>@(((decimal)Model.TotalRevenue).ToString("N0")) VNĐ</h5>
                                    <span>Tổng lợi nhuận</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <!-- table card-1 end -->
            <!-- prject ,team member start -->
            <div class="col-xl-6 col-md-12">
                <div class="card table-card">
                    <div class="card-header mb-md-n5" id="chart"></div>
                </div>
            </div>
            <div class="col-xl-6 col-md-12">
                <div class="card latest-update-card">
                    <div class="card-header mb-md-n5" id="chart2"></div>
                </div>
            </div>
            <!-- prject ,team member start -->
            <!-- seo start -->
            <div class="col-xl-12 col-md-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-md-12 m-3" id="chart3"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xl-12 col-md-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-md-12 m-3" id="chart4"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xl-12 col-md-12">
                <div class="card">
                    <div class="card-body">
                        @Html.DropDownList("TopOption", new SelectList(Constants.TopOption, "Key", "Value"), new { @class = "form-control form-select TopOption" })
                        <div class="row align-items-center" id="dataContainer">
                            @{ Html.RenderAction("_TopCustomer", "Dashboard", new { from = form, to = to });}

                        </div>
                    </div>
                </div>
            </div>

        </div>
        <!-- [ Main Content ] end -->
    </div>
</div>
@section Scripts{
    <script src="~/Scripts/apexchart/dist/apexcharts.min.js"></script>
    <script>
        $(document).ready(function () {
            var optionsChart1 = {
                labels: ["Quản trị viên", "Nhân viên"],
                series:  [@Model.CountAdmin, @Model.CountStaff],
                chart: {
                    type: 'pie',
                    defaultLocale: 'en',
                    locales: [{
                        name: 'en',
                        options: {
                            toolbar: {
                                "exportToSVG": "Tải về SVG",
                                "exportToPNG": "Tải về Hình",
                                "exportToCSV": "Tải về CSV",
                                "menu": "Tùy chọn",
                            }
                        }
                    }],
                    toolbar: {
                        show: true,
                        offsetX: 0,
                        offsetY: 0,
                        tools: {
                            download: true,
                        },
                        autoSelected: 'zoom'
                    },
                },
                plotOptions: {
                    pie: {
                        customScale: 1,
                        offsetX: 0,
                        offsetY: 0,
                    }
                },
                legend: {
                    position: 'bottom'
                },

                title: {
                    text: 'Thống kê nhân sự',
                    style: {
                        fontSize: '20px',
                        fontWeight: 'bold',
                        fontFamily: 'Open Sans',
                        color: '#263238'
                    },
                },

            };
            var optionsChart2 = {
                plotOptions: {
                    pie: {
                        customScale: 1,
                        offsetX: 0,
                        offsetY: 0,


                        donut: {
                            size: '55%',
                            background: 'transparent',
                            labels: {
                                show: true,
                                name: {
                                    show: true,
                                    fontSize: '14px',
                                    fontFamily: 'Open Sans',
                                    offsetY: -10
                                },
                                value: {
                                    show: true,
                                    fontSize: '18px',
                                    fontFamily: 'Open Sans',
                                    offsetY: 16,
                                    //format value cho cho pie bất kỳ khi pie đó được hover
                                    formatter: function (val) {
                                        return (val + ' đơn hàng')
                                    }
                                },
                                total: {
                                    show: true,
                                    showAlways: false,
                                    label: 'Đơn hàng',
                                    fontSize: '1.8rem',
                                    fontFamily: 'Open Sans',
                                    color: '#373d3f',
                                    //format value cho cho lable tổng khi không hover vào pie nào
                                    formatter: function (w) {
                                        return w.globals.seriesTotals.reduce((a, b) => {
                                            return a + b
                                        }, 0)
                                    }
                                }
                            }
                        },
                    },

                },

                chart: {
                    defaultLocale: 'en',
                    locales: [{
                        name: 'en',
                        options: {
                            toolbar: {
                                "exportToSVG": "Tải về SVG",
                                "exportToPNG": "Tải về Hình",
                                "exportToCSV": "Tải về CSV",
                                "menu": "Tùy chọn",
                            }
                        }
                    }],
                    toolbar: {
                        show: true,
                        offsetX: 0,
                        offsetY: 0,
                        tools: {
                            download: true,
                        },
                        autoSelected: 'zoom'
                    },
                    type: 'donut',
                },
                labels: ['Đã thanh toán', 'Ghi nợ tiền mặt', 'Ghi nợ tiền ghi nợ'],
                series:   @Html.Raw((Json.Encode(Model.CountArr1))),
                legend: {
                    position: 'bottom'
                },
                title: {
                    text: 'Thống kê đơn hàng',
                    style: {
                        fontSize: '18px',
                        fontWeight: 'bold',
                        fontFamily: 'Open Sans',
                        color: '#263238'
                    },
                },
            };
            var optionsChart3 = {
                series: [{
                    name: 'Lợi nhuận',
                    data:@Html.Raw((Json.Encode(Model.CountArr2))),
                }],
                chart: {
                    type: 'bar',
                    height: 450
                },
                plotOptions: {
                    bar: {
                        horizontal: false,
                        columnWidth: '50%',
                        endingShape: 'rounded'
                    },
                },
                dataLabels: {
                    enabled: false
                },
                stroke: {
                    show: true,
                    width: 2,
                    colors: ['transparent']
                },
                xaxis: {
                    categories: @Html.Raw((Json.Encode(Model.ItemArr2))),
                },
                yaxis: {
                    title: {
                        text: 'VNĐ (ĐỒNG)',
                    }
                },
                fill: {
                    opacity: 1
                },

                tooltip: {
                    y: {
                        formatter: function (val) {
                            return val + " VNĐ"
                        }
                    }
                }, title: {
                    text: 'Thông kê lợi nhuận doanh thu',
                    style: {
                        fontSize: '20px',
                        fontWeight: 'bold',
                        fontFamily: 'Open Sans',
                        color: '#263238'
                    },
                }
            };
            var optionsChart4 = {
                series: [
                    {
                        name: "Số đơn hàng",
                        data:  @Html.Raw((Json.Encode(Model.CountArr3))),
                    }
                ],
                chart: {
                    height: 600,
                    type: 'line',
                    dropShadow: {
                        enabled: true,
                        color: '#000',
                        top: 18,
                        left: 7,
                        blur: 10,
                        opacity: 0.2
                    },
                    toolbar: {
                        show: false
                    }
                },
                dataLabels: {
                    enabled: true,
                },
                stroke: {
                    curve: 'smooth'
                },
                title: {
                    text: 'Average High & Low Temperature',
                    align: 'left'
                },
                grid: {
                    borderColor: '#e7e7e7',
                    row: {
                        colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns
                        opacity: 0.5
                    },
                },
                markers: {
                    size: 1
                },
                xaxis: {
                    categories:  @Html.Raw((Json.Encode(Model.ItemArr2))),
                    title: {
                        text: 'Ngày'
                    }
                },

                legend: {
                    position: 'top',
                    horizontalAlign: 'right',
                    floating: true,
                    offsetY: -25,
                    offsetX: -5
                },
                title: {
                    text: 'Thống kê đơn hàng',
                    style: {
                        fontSize: '20px',
                        fontWeight: 'bold',
                        fontFamily: 'Open Sans',
                        color: '#263238'
                    },
                },
            };

            var chart = new ApexCharts(document.querySelector("#chart"), optionsChart1);
            chart.render();
            var chart2 = new ApexCharts(document.querySelector("#chart2"), optionsChart2);
            chart2.render();

            var chart3 = new ApexCharts(document.querySelector("#chart3"), optionsChart3);
            chart3.render();

            var chart4 = new ApexCharts(document.querySelector("#chart4"), optionsChart4);
            chart4.render();

        })

        $("#DateStart").change(function () {
            var date_start = $("#DateStart").val();
            var date_end = $("#DateEnd").val();
            if (date_start <= date_end) {
                document.querySelector("#btn_Submit").disabled = false;
            } else {
                Swal.fire('Lỗi', 'Thời gian bắt đầu phải nhỏ hơn thời gian kết thúc !', 'error')
                document.querySelector("#btn_Submit").disabled = true;
            }

        });
        $("#DateEnd").change(function () {
            var date_start = $("#DateStart").val();
            var date_end = $("#DateEnd").val();
            if (date_start <= date_end) {
                document.querySelector("#btn_Submit").disabled = false;
            } else {
                Swal.fire('Lỗi', 'Thời gian bắt đầu phải nhỏ hơn thời gian kết thúc !', 'error')
                document.querySelector("#btn_Submit").disabled = true;
            }
        });

        $(".TopOption").change(function () {
            var TopOption = $(this).val();
            var date_start = $("#DateStart").val();
            var date_end = $("#DateEnd").val();
            GetTopCustomer(date_start, date_end, TopOption);
        });

        function GetTopCustomer(date_start, date_end, TopOption) {

            $.ajax({
                url: '@Url.Action("_TopCustomer", "Dashboard")',
                data: {
                    from: date_start,
                    to: date_end,
                    TopOption: TopOption,
                }
            }).done(function (result) {
                $('#dataContainer').html(result);
            }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                console.log(textStatus)
                console.log(errorThrown)
                alert("Something Went Wrong, Try Later");
            });
        }


    </script>
}
