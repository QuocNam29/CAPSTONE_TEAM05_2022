@model CAP_TEAM05_2022.Models.customer
@using Constants = MilitaryMonitoring.Helpers.Constants

@{
    bool isCreate = ViewBag.isCreate;
}
<div id="Customer" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog  modal-lg" role="document">
        <form class="CusomerForm" method="post" action="@Url.Action(isCreate ? "Create" : "Edit", "customers")">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 id="customModalTitle" class="modal-title white">Thêm mới khách hàng</h5>
                    <button type="button" data-dismiss="modal" aria-label="Close" class="close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    @if (!isCreate)
                    {
                        @Html.HiddenFor(m => m.id)
                        @Html.HiddenFor(m => m.code)
                        @Html.HiddenFor(m => m.created_by)
                        @Html.HiddenFor(m => m.created_at)
                        @Html.HiddenFor(m => m.status)
                    }
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>
                                    Họ và tên<span class="text-danger">*</span>
                                </label>
                                <div class="position-relative">
                                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập họ và tên" } })
                                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                                </div>

                                <!---->
                            </div>
                            <div class="form-group">
                                <label>
                                    Số điện thoại<span class="text-danger">*</span>
                                </label>
                                <div class="position-relative">
                                    @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập số điện thoại" } })
                                    @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                                </div>
                                <!---->
                            </div>
                            <div class="form-group">
                                <label>Địa chỉ Email</label>
                                <div class="position-relative">
                                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập Email" } })
                                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                </div>
                                <!---->
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Ngày sinh</label>
                                <div class="position-relative">
                                    @Html.EditorFor(model => model.birthday, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập ngày sinh" } })
                                    @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Số tài khoản ngân hàng</label>
                                <div class="position-relative">
                                    @Html.EditorFor(model => model.account_number, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập số tài khoản ngân hàng" } })
                                    @Html.ValidationMessageFor(model => model.account_number, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Tên ngân hàng</label>
                                <div class="position-relative">
                                    @Html.EditorFor(model => model.bank, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập tên ngân hàng" } })
                                    @Html.ValidationMessageFor(model => model.bank, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>
                                    Nhóm khách hàng<span class="text-danger">*</span>
                                </label>
                                <div class="position-relative">
                                    @if ((bool)ViewBag.isCreate)
                                    {
                                        @Html.DropDownList("type", new SelectList(Constants.TypeCustomer, "Key", "Value"), "---- Chọn nhóm khách hàng ----", new { @class = "form-control" })
                                    }
                                    else
                                    {
                                        @Html.DropDownList("type", new SelectList(Constants.TypeCustomer, "Key", "Value", Model.type), new { @class = "form-control" })
                                    }
                                    @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                                </div>
                                <!---->
                            </div>
                            <div class="form-group">
                                <label>
                                    Địa chỉ<span class="text-danger">*</span>
                                </label>
                                <div class="position-relative">
                                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nhập địa chỉ" } })
                                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                                </div>
                                <!---->
                            </div>
                            <div class="form-group">
                                <label>Ghi chú</label>
                                <div class="position-relative">
                                    @Html.TextAreaFor(model => model.note, new { @class = "form-control", @placeholder = "Ghi chú" })
                                    @Html.ValidationMessageFor(model => model.note, "", new { @class = "text-danger" })
                                </div>
                                <!---->
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Huỷ bỏ</button>
                    <button type="submit" class="btn btn-primary">Thêm mới</button>
                </div>
            </div>
        </form>
    </div>
</div>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    $('.CusomerForm').submit(function (e) {
        var form = $(this);
        var _this = $(this);
        var _form = _this.closest("form");
        var isvalid = _form.valid()
        // Check if form is valid then submit ajax
        if (isvalid) {
            e.preventDefault();
            var url = form.attr('action');
            $.ajax({
                url: url,
                type: 'POST',
                data: form.serialize(),
                success: function (data) {
                    // Hide bootstrap modal to prevent conflict
                    $('.modal').modal('hide');

                    if (data.status) {
                        // Refresh table data
                        var type = $("#filter_type").val();
                        GetList_Customer(type)
                        sweetAlert
                            ({
                                title: "Thành công !",
                                text: data.message,
                                type: "success"
                            })

                        form[0].reset();
                        form.removeClass('was-validated');
                    } else {
                        swal({
                            title: 'Lỗi !',
                            text: data.message,
                            type: 'error',

                        }); // Show bootstrap modal again
                    }
                }
            });
        }
    });
</script>

