@using Constants = CAP_TEAM05_2022.Helper.Constants

@{
    ViewBag.Title = "Quản lý công nợ";
    Layout = "~/Views/Shared/_Layout_QuyThanh.cshtml";
    bool isDebtsCustomer = ViewBag.isDebtsCustomer;
}
@section style {
    <link href="~/Content/css/custom-css.css" rel="stylesheet" />
}
<style>
    .table thead th {
        background: #1abc9c !important;
        color: white;
    }

    .total-sale {
        padding: 10px;
        background-color: yellow;
        border-radius: 10px;
        font-weight: bold;
    }

    .spending-detail {
        padding: 10px;
        background-color: yellowgreen;
        border-radius: 10px;
        font-weight: bold;
    }
</style>
<input type="text" hidden id="URLFindDebt" value="@Url.Action("FindDebt", "Debts_Collections")/" />

<section class="pcoded-main-container">
    <div class="pcoded-content" data-select2-id="74">
        <div class="page-header">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-12">
                        <div class="page-header-title">
                            <h5 class="m-b-10">Quản lý công nợ</h5>
                        </div>
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="https://dnqt.net">
                                    <i class="feather icon-home">
                                    </i>
                                </a>
                            </li>
                            <li class="breadcrumb-item">
                                <a href="javascript:void(0)">Quản lý công nợ</a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div>
            <div class="row">
                <div class="col-md-12">
                    @if (!isDebtsCustomer)
                    {
                    <div class="card">
                        <div class="card-header">
                            <h4>Công nợ với công ty</h4>
                            <div class="row"></div>
                        </div>
                        <div class="card-body table-border-style">
                            <div class="row mb-3">
                                <div class="col-md-4">
                                    <div class="mx-datepicker">
                                        <div class="mx-input-wrapper">
                                            <input id="debt_DateStart" class="form-control custom-width flatpickr" value="@String.Format("{0:yyyy-MM-dd}", DateTime.Now.AddDays((-DateTime.Now.Day) + 1))">

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mx-datepicker">
                                        <div class="mx-input-wrapper">
                                            <input id="debt_DateEnd" class="form-control custom-width flatpickr" value="@String.Format("{0:yyyy-MM-dd}", DateTime.Now.AddMonths(1).AddDays(-(DateTime.Now.Day)))">

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <button class="btn btn-primary float-right mb-3" onclick="createOldDebt()">Tạo mới</button>
                                </div>
                            </div>
                            <div class="table-responsive" id="dataContainer">
                                @{ Html.RenderAction("_SupplierDebtsList", "Debts_Collections");}

                            </div>
                        </div>

                    </div>
                    }
                    else
                    {
                <div class="card">
                    <div class="card-header">
                        <h4>Công nợ với khách hàng</h4>
                        <div class="row"></div>
                    </div>
                    <div class="card-body table-border-style">
                        <div class="table-responsive" id="dataContainer">
                            @{ Html.RenderAction("_CustomerDebtsList", "Debts_Collections");}

                        </div>
                    </div>
                </div>
                    }
                </div>
            </div>
        </div>
    </div>

</section>
<div id="dataContainer2">
</div>

<div id="DebtCollectionModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="DebtCollectionModalLabel" aria-hidden="true">
    <div role="document" class="modal-dialog modal-lg">
        <form class="DebtsForm" method="post" action="@Url.Action("Create_Debts", "Debts_Collections")" novalidate>
            @Html.AntiForgeryToken()
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 id="DebtCollectionTitle" class="modal-title white">Thu nợ</h5>
                    <button type="button" data-dismiss="modal" aria-label="Close" class="close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>

                <div class="modal-body">
                    <div class="row">
                        <input type="number" hidden name="customer_id" id="customer_id" />
                        <input type="number" hidden name="method" id="method" />

                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Tổng tiền:</label>
                                <div class="position-relative">
                                    <div class="input-group mb-3">
                                        <input type="text" disabled id="order_total" class="form-control">
                                        <div class="input-group-append">
                                            <span id="basic-addon2" class="input-group-text">VNĐ</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Đã thu: </label>
                                <div class="position-relative">
                                    <div class="input-group mb-3">
                                        <input type="text" name="debts_total" id="debts_total" disabled class="form-control">
                                        <div class="input-group-append">
                                            <span id="basic-addon2" class="input-group-text">VNĐ</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Còn nợ:</label>
                                <div class="position-relative">
                                    <div class="input-group mb-3">
                                        <input type="text" id="Debt_conlai" disabled class="form-control">
                                        <div class="input-group-append">
                                            <span id="basic-addon2" class="input-group-text">VNĐ</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Mã khách hàng</label>
                                <div class="position-relative">
                                    <input type="text" id="MKH" placeholder="Mã khách hàng" disabled class="form-control">
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Tên khách hàng</label>
                                <div class="position-relative">
                                    <input type="text" id="Name_KH" placeholder="Tên khách hàng" disabled class="form-control">
                                </div>
                            </div>
                            <div class="form-group">
                                <label>SĐT khách hàng</label>
                                <div class="position-relative">
                                    <input type="text" id="phone_KH" placeholder="Số điện thoại" disabled class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>
                                    Nhập số tiền thu <span class="text-danger">*</span>
                                </label>
                                <div class="position-relative">
                                    <input type="text" name="paid" class="form-control Price" data-val="true" data-val-required="Vui lòng nhập số tiền thu !" required>
                                    @Html.ValidationMessage("paid", "", new { @class = "text-danger" })
                                </div>
                                <!---->
                            </div>
                            <div class="form-group">
                                <label>Ghi chú</label>
                                <textarea id="first-name-icon" name="note" placeholder="Ghi chú" rows="6" class="form-control"></textarea>
                                <!---->
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Huỷ bỏ</button>
                    <button type="submit" class="btn btn-primary">Lưu</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
     var row;
    $(document).ready(function () {
        $('#example').DataTable({
            pagingType: 'full_numbers',
        });
    });
     function GetList_orderDetails(id, method) {
            $.ajax({
                url: '@Url.Action("_DebtsDetailsList", "Debts_Collections")',
                data: {
                    customer_id: id,
                }
            }).done(function (result) {
                $('#dataContainer2').html(result);
                    $('#detailModal.close').css('display', 'none');
                    $('#detailModal').modal('show');
            }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                console.log(textStatus)
                console.log(errorThrown)
                alert("Something Went Wrong, Try Later");
            });
    }
    function GetList_History(id) {
            $.ajax({
                url: '@Url.Action("_HistoryOrder", "sales")',
                data: {
                    order_customer: id,
                    method: @Constants.DEBT_ORDER,
                }
            }).done(function (result) {
                $('#dataContainer2').html(result);
                $('#historyModal.close').css('display', 'none');
                $('#historyModal').modal('show');
            }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                console.log(textStatus)
                console.log(errorThrown)
                alert("Something Went Wrong, Try Later");
            });
    }
    function GetList_HistorySupplier(id) {
            $.ajax({
                url: '@Url.Action("_HistoryInventory", "inventory_order")',
                data: {
                    order_customer: id,
                    method: @Constants.DEBT_ORDER,
                }
            }).done(function (result) {
                $('#dataContainer2').html(result);
                $('#historySupplierModal.close').css('display', 'none');
                $('#historySupplierModal').modal('show');
            }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                console.log(textStatus)
                console.log(errorThrown)
                alert("Something Went Wrong, Try Later");
            });
        }
        function createOldDebt() {
           if ($('#isCreate').val() != undefined && $('#isCreate').val() == @Constants.CREATE_FORM) {
                $('#OldDebtCollectionModal').modal('show');

            } else {
            $.ajax({
                url: '@Url.Action("_FormOldDebt", "Debts_Collections")',
                type: 'GET',
                data: {},
                success: function (response) {
                    // Add response in Modal body
                    $('#dataContainer2').html(response);
                    // Display Modal
                    $('#OldDebtCollectionModal').modal('show');
                }
            });

            }
        }

        $('.DebtsForm').submit(function (e) {

            var form = $(this);
            // Check if form is valid then submit ajax
            if (form[0].checkValidity()) {
                e.preventDefault();
                var url = form.attr('action');
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: form.serialize(),
                    success: function (data) {
                        // Hide bootstrap modal to prevent conflict
                        $('.modal').modal('hide');

                        if (data.status) {
                            // Refresh table data
                            GetList_Debt()
                            Swal.fire('Thành công !', data.message, 'success');
                            form[0].reset();
                            form.removeClass('was-validated');
                        } else {
                            Swal.fire('Lỗi !', data.message, 'error');
                        }
                    }
                });
            }
        });
        function GetList_Debt() {
            var check = @isDebtsCustomer.ToString().ToLower();
            if (check) {
                $.ajax({
                    url: '@Url.Action("_CustomerDebtsList", "Debts_Collections")',
                    data: {
                    }
                }).done(function (result) {
                    $('#dataContainer').html(result);
                    $('#example').DataTable();
                }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    console.log(textStatus)
                    console.log(errorThrown)
                    Swal.fire('Lỗi !', 'Đã xảy ra lỗi, hãy thử lại sau !', 'error');
                });
            } else {
                $.ajax({
                    url: '@Url.Action("_SupplierDebtsList", "Debts_Collections")',
                    data: {}
                }).done(function (result) {
                    $('#dataContainer').html(result);
                    $('#example').DataTable();
                }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    console.log(textStatus)
                    console.log(errorThrown)
                    Swal.fire('Lỗi !', 'Đã xảy ra lỗi, hãy thử lại sau !', 'error');
                });
            }
        }

        function DebtCollection(ele, id, method) {
            row = $(ele).closest('tr');
            $.ajax({
                type: 'POST',
                url: '@Url.Action("FindDebt", "Debts_Collections")/',
                data: {
                    id: id,
                    method: method
                },
                success: function (response) {
                    $('#customer_id').val(response.id);
                    $('#order_total').val(response.total.toLocaleString());
                    $('#debts_total').val(response.prepayment.toLocaleString());
                    $('#Debt_conlai').val((response.total - response.prepayment).toLocaleString());
                    $('#MKH').val(response.code);
                    $('#Name_KH').val(response.note);
                    $('#phone_KH').val(response.created_by);
                    $('#method').val(method);

                    $('#DebtCollectionModal .close').css('display', 'none');
                    $('#DebtCollectionModal').modal('show');
                }
            })
        }
    </script>
}

