@model CAP_TEAM05_2022.Models.inventory_order
@using Constants = CAP_TEAM05_2022.Helper.Constants;
@{
    bool isCreate = ViewBag.isCreate;

}
<input type="number" id="isCreate" value="@(isCreate ? Constants.CREATE_FORM : Constants.NOT_CREATE_FORM)" />
<div class="modal fade" id="OldDebtCollectionModal" tabindex="-1">
    <div class="modal-dialog  modal-lg" role="document">
        <form class="OldDebtsForm" method="post" action="@Url.Action( "OldDebt" , "Debts_Collections")">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h5 class="modal-title" id="AddCategoryLabel">Tạo nợ cũ</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>
                                    Nhóm hàng<span class="text-danger">*</span>
                                </label>
                                <div class="position-relative">
                                    @Html.DropDownListFor(model => model.supplier_id, (SelectList)ViewBag.SupplierId, "---- Chọn nhà cung cấp ----", new { @class = "form-control", @required = "required" })
                                    @Html.ValidationMessageFor(m => m.supplier_id, "", new { @class = "text-danger" })
                                </div> <!---->
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>
                                    Ngày ghi nợ<span class="text-danger">*</span>
                                </label>
                                <div class="position-relative">
                                    <input class="form-control" type="datetime-local" name="create_at" required />
                                    @Html.ValidationMessage("create_at", "", new { @class = "text-danger" })
                                </div> <!---->
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Số tiền nợ<span class="text-danger">*</span></label>
                                <div class="position-relative">
                                    <input type="text" name="debtPrice" placeholder="Nhập số tiền nợ" class="form-control Price" required>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Số tiền đã thah toán<span class="text-danger">*</span></label>
                                <div class="position-relative">
                                    <input type="text" name="paymentPrice" placeholder="Nhập số tiền thanh toán" class="form-control Price" required>
                                </div>
                            </div>
                        </div>
                    </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn  btn-secondary" data-dismiss="modal">Hủy</button>
                        <button type="submit" class="btn btn-primary">Lưu</button>
                    </div>
                </div>
        </form>
    </div>
</div>
<div id="OldDebtCollectionModal" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
        <div role="document" class="modal-dialog modal-lg">
            <form class="OldDebtsForm" method="post" action="#" novalidate>
                <div class="modal-content">
                    <div class="modal-header bg-primary">
                        <h5 id="DebtCollectionTitle" class="modal-title white">Tạo đơn nợ cũ </h5>
                        <button type="button" data-dismiss="modal" aria-label="Close" class="close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>
                                        Nhóm hàng<span class="text-danger">*</span>
                                    </label>
                                    <div class="position-relative">
                                        @Html.DropDownList("supplier", (SelectList)ViewBag.SupplierId, "---- Chọn nhà cung cấp ----", new { @class = "form-control custom-select", @required = "required", @aria_label = "Chọn nhà cung cấp" })
                                        @Html.ValidationMessage("supplier", "", new { @class = "text-danger" })
                                    </div> <!---->
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>
                                        Ngày ghi nợ<span class="text-danger">*</span>
                                    </label>
                                    <div class="position-relative">
                                        <input class="form-control" type="datetime-local" name="dateDebt" required />
                                        @Html.ValidationMessage("dateDebt", "", new { @class = "text-danger" })
                                    </div> <!---->
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Số tiền nợ<span class="text-danger">*</span></label>
                                    <div class="position-relative">
                                        <input type="text" placeholder="Nhập số tiền nợ" class="form-control Price" required>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Số tiền nợ<span class="text-danger">*</span></label>
                                    <div class="position-relative">
                                        <input type="text" placeholder="Nhập số tiền nợ" class="form-control Price" required>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Huỷ bỏ</button>
                        <button type="submit" class="btn btn-primary">Lưu</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <!--Validation-->
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $('.OldDebtsForm').submit(function (e) {
            var form = $(this);
            var _this = $(this);
            var _form = _this.closest("form");
            var isvalid = _form.valid()
            // Check if form is valid then submit ajax
            if (isvalid) {
                e.preventDefault();
                var url = form.attr('action');
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: form.serialize(),
                    success: function (data) {
                        // Hide bootstrap modal to prevent conflict
                        $('.modal').modal('hide');

                        if (data.status) {
                            // Refresh table data
                            Swal.fire('Thành công !', data.message, 'success')

                            form[0].reset();
                            form.removeClass('was-validated');
                        } else {
                            Swal.fire('Lỗi !', data.message, 'error')
                        }
                    }
                });
            }
        });
        $('.Price').keydown(function (e) {
            setTimeout(() => {
                let parts = $(this).val().split(".");
                let v = parts[0].replace(/\D/g, ""),
                    dec = parts[1]
                let calc_num = Number((dec !== undefined ? v + "." + dec : v));
                // use this for numeric calculations
                // console.log('number for calculations: ', calc_num);
                let n = new Intl.NumberFormat('en-EN').format(v);
                n = dec !== undefined ? n + "." + dec : n;
                $(this).val(n);
            })
        })
    </script>
