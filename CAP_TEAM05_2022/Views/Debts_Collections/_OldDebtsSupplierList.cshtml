@model IEnumerable<CAP_TEAM05_2022.Models.inventory_order>
@{
    int no = 0;
}
<table id="example" class="table table-hover">
    <thead>
        <tr>
            <th>STT</th>
            <th>Mã đơn nhập</th>
            <th>Tên nhà cung cấp</th>
            <th class="text-center">Tổng giá trị</th>
            <th class="text-center">Phương thức</th>
            <th class="text-center">Ngày giao dịch</th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            no++;
            <tr>
                <td>@no<input hidden type="text" name="record" value="@item.code"></td>
                <td>@item.code</td>
                <td>@(item.customer?.name)</td>
                <td class="text-center">
                    @(((decimal)item.Total).ToString("N0")) VNĐ
                </td>

                @if (item.state == 1)
                {
                    <td class="text-center">
                        Đã thanh toán
                    </td>
                }
                else
                {
                    <td class="text-center">
                        Ghi nợ
                    </td>
                }
                <td class="text-center">
                    @String.Format("{0:HH:mm - dd/MM/yyy}", item.create_at)
                </td>
                <td>
                    <button title="Xem chi tiết" class="btn btn-info" onclick="GetList_InventoryDetails('@item.id', 1)">
                        <span class="pcoded-micon">
                            <i class="fas fa-info">
                            </i>
                        </span>
                    </button>
                    <button class="btn btn-danger" onclick="deleteOldDebtSupplier('@item.id', '@item.code')" id="Delete">
                        <i class="feather icon-trash-2">
                        </i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
<script>
    function deleteOldDebtSupplier(id, code) {
        Swal.fire({
            title: 'Bạn có chắc chắn muốn xóa đơn nợ cũ ?',
            text: "Bạn không thể hoàn nguyên nếu có sai xót !",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Xác nhận'
        }).then((result) => {
            if (result.isConfirmed) {
                var order = {};
                order.id = id;
                $.ajax({
                    url: '@Url.Action("Delete_OldDebtSupplier", "Debts_Collections")',
                    data: JSON.stringify(order),
                    type: "POST",
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json'
                })
                    .done(function (data) {
                        if (data.status) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Thành công',
                                text: data.message,
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    $("table tbody").find('input[name="record"]').each(function () {
                                        if (Contains($(this).val(), code)) {
                                            $(this).parents("tr").remove();
                                        }
                                    });
                                }
                            })

                        }
                        else {
                            Swal.fire('Lỗi !', data.message, 'error');
                        }
                    })
                /*   .error(function (data) {
                   swal("OOps", "Chúng tôi không thể kết nối đến server!", "error");
               })*/
            }
        })
    }

</script>
