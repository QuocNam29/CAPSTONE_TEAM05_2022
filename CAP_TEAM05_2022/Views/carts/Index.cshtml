@model IEnumerable<CAP_TEAM05_2022.Models.cart>
@using Constants = CAP_TEAM05_2022.Helper.Constants

@{
    Layout = null;
    int no = 0;
    decimal total = Model.Sum(s => s.price);
}
<link href="~/Content/css/custom-css.css" rel="stylesheet" />

@if (Model.Any())
{
    <form class="CreateOderForm" id="CreateOderForm" action="@Url.Action("CreateSale", "sales")" method="post" novalidate>
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            @Html.AntiForgeryToken()

                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Tổng đơn hàng theo tiền mặt: </label>
                                    <input type="text" id="total" disabled="disabled" class="form-control" value="@Model.Sum(x=> x.price_product.price * x.quantity).ToString("N0")">
                                </div>

                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Tổng đơn hàng theo tiền ghi nợ: </label>
                                    <input type="text" id="total" disabled="disabled" class="form-control" value="@Model.Sum(x=> x.price_product.price_debt * x.quantity).ToString("N0")">

                                </div>
                            </div>
                            <div class="col-md-3 ">
                                <div class="form-group">
                                    <label>Trả trước (đối với ghi nợ) : </label>
                                    <input type="text" placeholder="Thanh toán 1 phần" id="cart_Prepay" maxlength="15" class="form-control Price"
                                           data-val="true" name="payment">
                                    @Html.ValidationMessage("payment", "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3 debt-order" style="display: none;">
                                <label class="form-label">Phương thức giá (đối với ghi nợ) :</label>
                                <div class="mt-2">
                                    <div class="form-check form-check-inline">
                                        <input type="radio" class="form-check-input" name="methodPrice" value="@Constants.DEBT_METHOD_PRICE" required data-val="true" data-val-required="Vui lòng chọn phương thức giá !" />
                                        <label class="form-check-label" for="methodPrice">
                                            Bán giá ghi nợ
                                        </label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input type="radio" class="form-check-input" name="methodPrice" value="@Constants.CASH_METHOD_PRICE" required data-val="true" data-val-required="Vui lòng phương thức giá !" />
                                        <label class="form-check-label" for="methodPrice">
                                            Bán giá tiền mặt
                                        </label>
                                    </div>
                                </div>
                                @Html.ValidationMessage("methodPrice", "", new { @class = "text-danger" })

                            </div>
                            <div class="col-md-6 oldOrder">
                                <div class="form-group">
                                    <label>Ghi chú</label>
                                    <input type="text" id="cart_note" placeholder="Ghi chú" class="form-control">
                                </div>
                            </div>
                            <div class="col-md-3 oldOrder">
                                <div class="form-group">
                                    <label for="product-price-import">
                                        Ngày tạo đơn hàng<span class="text-danger">*</span>
                                    </label>
                                    <div class="position-relative">
                                        <input type="datetime-local" id="cart_datime" name="created_at" class="form-control" required data-val="true" data-val-required="Vui lòng nhập ngày tạo hóa đơn !" value="@String.Format("{0:yyyy-MM-ddTHH:mm:ss}",DateTime.Now)">
                                        @Html.ValidationMessage("created_at", "", new { @class = "text-danger" })
                                    </div>
                                    <!---->
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label for="product-price-import">
                                        Phương thức thanh toán
                                    </label>
                                    <input type="hidden" id="methodOrder" name="method" value="0" />
                                    <input type="hidden" id="formCustomer_id" name="customer_id" value="0" />
                                    <button type="button" id="payment_btn" onclick="MethodSubmit('@Constants.PAYED_ORDER')" class="btn btn-warning btn-block">
                                        Thanh toán
                                    </button>
                                    <button type="submit" hidden id="payment_btn_submit" class="btn btn-warning btn-block">
                                        Thanh toán
                                    </button>
                                    <button type="button" onclick="MethodSubmit('@Constants.DEBT_ORDER')" class="btn btn-dark btn-block" id="btn_debit" style="display: none;">
                                        Ghi nợ
                                    </button>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        function MethodSubmit(method) {
            $('#methodOrder').val(method);
            document.getElementById('payment_btn_submit').click();
        }
        $('.CreateOderForm').submit(function (e) {
            var form = $(this);
            var _this = $(this);
            var _form = _this.closest("form");
            var isvalid = _form.valid();
            console.log(form.serialize())
            // Check if form is valid then submit ajax
            if (isvalid) {
                e.preventDefault();
                var url = form.attr('action');

                var method = $('#methodOrder').val();
                if (method == 1) {
                    Swal.fire({
                        title: 'Thanh toán?',
                        text: 'Bạn có chắc chắn muốn thanh toán',
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonText: 'xác nhận',
                    }).then((result) => {
                        /* Read more about isConfirmed, isDenied below */
                        if (result.isConfirmed) {

                            $.ajax({
                                async: false,
                                url: url,
                                type: 'POST',
                                data: form.serialize(),
                                success: function (response) {
                                    if (response.status) {
                                        GetList_Cart($('#customer_id').val());
                                        document.querySelector("#customer_name").disabled = false;
                                        document.querySelector("#product_name").disabled = false;
                                        $('#product_code').val('');
                                        $('#product_unit').val('');
                                        $('#product_price').val('');
                                        $('#product_name').val('');
                                        $('#sum_price').val('');
                                        $('#product_quantity').val(1);
                                        $("#submit_addCart").show();
                                        $("#refresh_cart").show();
                                        $("#submit_updateCart").hide();
                                        $("#Cancel_Cart").hide();
                                        $("#payment_btn").hide();
                                        $("#order_btn").hide();

                                        Swal.fire({
                                            title: 'Thành công!',
                                            text: 'Bạn có muốn in hóa đơn ?',
                                            icon: 'success',
                                            showCancelButton: true,
                                            confirmButtonText: 'In hóa đơn',
                                        }).then((result) => {
                                            /* Read more about isConfirmed, isDenied below */
                                            if (result.isConfirmed) {
                                                PrintOrder(response.sale_id);
                                            }
                                        })
                                    } else {
                                        Swal.fire('Lỗi !', response.message, 'error');
                                    }

                                }
                            });
                        }
                    })
                } else {
                    Swal.fire({
                        title: 'Ghi nợ?',
                        text: 'Bạn đã chắc chắn muốn ghi nợ đơn hàng ?',
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonText: 'xác nhận',
                    }).then((result) => {
                        /* Read more about isConfirmed, isDenied below */
                        if (result.isConfirmed) {
                            $.ajax({
                                async: false,
                                url: url,
                                type: 'POST',
                                data: form.serialize(),
                                success: function (response) {
                                    if (response.status) {
                                        GetList_Cart($('#customer_id').val());
                                        document.querySelector("#customer_name").disabled = false;
                                        document.querySelector("#product_name").disabled = false;
                                        $('#product_code').val('');
                                        $('#product_unit').val('');
                                        $('#product_price').val('');
                                        $('#product_name').val('');
                                        $('#sum_price').val('');
                                        $('#product_quantity').val(1);
                                        $("#submit_addCart").show();
                                        $("#refresh_cart").show();
                                        $("#submit_updateCart").hide();
                                        $("#Cancel_Cart").hide();
                                        $("#payment_btn").hide();
                                        $("#order_btn").hide();

                                        Swal.fire({
                                            title: 'Thành công!',
                                            text: 'Bạn có muốn in hóa đơn ?',
                                            icon: 'success',
                                            showCancelButton: true,
                                            confirmButtonText: 'In hóa đơn',
                                        }).then((result) => {
                                            /* Read more about isConfirmed, isDenied below */
                                            if (result.isConfirmed) {
                                                PrintOrder(response.sale_id);
                                            }
                                        })
                                    } else {
                                        Swal.fire('Lỗi !', response.message, 'error');
                                    }

                                }
                            });
                        }
                    })
                }
            }
        });
        $('#formCustomer_id').val($('#customer_id').val());
    </script>
}

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body table-border-style">
                <div class="table-responsive">
                    <table id="example" class="table table-hover">
                        <thead>
                            <tr>
                                <th class="text-center">STT</th>
                                <th>Mã sản phẩm</th>
                                <th>Tên sản phẩm</th>
                                <th class="text-center">Giá tiền mặt</th>
                                <th class="text-center">Giá ghi nợ</th>
                                <th class="text-center">Số lượng</th>
                                <th class="text-center">Tổng tiền mặt</th>
                                <th class="text-center">Tổng tiền ghi nợ</th>
                                <th>Ghi chú</th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                no++;
                                <tr>
                                    <td>@no </td>
                                    <td>@item.product.code</td>
                                    <td>@item.product.name</td>

                                    <td class="text-center">@((item.price_product.price).ToString("N3")) VNĐ</td>
                                    <td class="text-center">@((item.price_product.price_debt).ToString("N3")) VNĐ</td>
                                    <td class="text-center">
                                        <div> @item.quantity<span class="txt-unit"> @item.unit</span></div>
                                    </td>
                                    <td class="text-center">@((item.price_product.price * item.quantity).ToString("N0")) VNĐ</td>
                                    <td class="text-center">@((item.price_product.price_debt * item.quantity).ToString("N0")) VNĐ</td>
                                    <td>@item.note</td>
                                    <td>
                                        <button class="btn btn-success" onclick="FillProduct_cart('@item.id', '@item.product_id','@item.product.name','@item.quantity', '@item.unit')">
                                            <i class="feather icon-edit">
                                            </i>
                                        </button>
                                        <input hidden type="text" id="URLDelete" value="@Url.Action("Delete_CartProduct", "carts")">
                                        <button class="btn btn-danger" onclick="deleteAlert('@item.id')" id="Delete">
                                            <i class="feather icon-trash-2">
                                            </i>
                                        </button>

                                    </td>


                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@if (Model.Any())
{
<script type="text/javascript">
    $(document).ready(function () {
        $('#example').DataTable({
            pagingType: 'full_numbers',
        });
        $('#order_btn').show();
    });
    $('#cart_Prepay').keydown(function (e) {
        setTimeout(() => {
            let parts = $(this).val().split(".");
            let v = parts[0].replace(/\D/g, ""),
                dec = parts[1]
            let calc_num = Number((dec !== undefined ? v + "." + dec : v));
            // use this for numeric calculations
            // console.log('number for calculations: ', calc_num);
                let n = new Intl.NumberFormat('en-EN').format(v);
            n = dec !== undefined ? n + "." + dec : n;
            if (v != "") {
                $(this).val(n);
                $('#btn_debit').show();
                $('.debt-order').show();
                $("#payment_btn").hide();

            } else {
                $(this).val('');
                $('#btn_debit').hide();
                $('.debt-order').hide();
                $("#payment_btn").show();
            }

        })
    })
</script>
}
<script>

    function deleteAlert(id) {
        Swal.fire({
            title: 'Bạn có chắc chắn muốn xóa',
            text: "Bạn không thể hoàn nguyên nếu có sai xót!",
            icon: 'warning',
            showCancelButton: true,


            confirmButtonText: 'Xác nhận'
        }).then((result) => {
            if (result.isConfirmed) {
               var categorys = {};
                categorys.id = id;

                $.ajax({
                    url: '@Url.Action("Delete_CartProduct", "carts")',
                    data: JSON.stringify(categorys),
                    type: "POST",
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json'
                })
                    .done(function (data) {
                        GetList_Cart($('#customer_id').val());
                        Swal.fire('Đã xóa!', '', 'success')
                    })
            }
        })
    }
    function FillProduct_cart(id, masp, tensp, soluong, unit) {
        $('#product_name').val(tensp);
        $('#product_quantity').val(soluong);
        $('#product_id').val(masp);
        $('#cart_id').val(id);

        document.querySelector("#customer_name").disabled = true;
        document.querySelector("#customer_phone").disabled = true;
        document.querySelector("#product_name").disabled = true;

        $("#submit_addCart").hide();
        $("#refresh_cart").hide();
        $("#submit_updateCart").show();
        $("#Cancel_Cart").show();
        LoadDataProduct_editCart(masp, unit);

        window.scrollTo({
            top: 0,
            behavior: `smooth`
        })
    }
    function LoadDataProduct_editCart(id, unit) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("FindProduct_name", "products")/',
            data: { "product_id": id },
            success: function (response) {
                $('#product_name').val(response.name);
                $('#product_code').val(response.code);
                $('#product_unit').val(response.note);
                $('#product_price').val(response.sell_price.toLocaleString());
                var sum_price = Number($('#product_price').val().replace(/\,/g, '').replace(/\./g, '')) * Number($('#product_quantity').val());
                $('#sum_price').val(sum_price.toLocaleString());

                $('#product_price_debt').val(response.sell_price_debt.toLocaleString());
                var sum_price_debt = Number($('#product_price_debt').val().replace(/\,/g, '').replace(/\./g, '')) * Number($('#product_quantity').val());
                $('#sum_price_debt').val(sum_price_debt.toLocaleString());

                document.querySelector("#sum_price").disabled = false;
                document.querySelector("#sum_price_debt").disabled = false;
                $('#product_price_swap').val(response.sell_price_swap.toLocaleString());
                if (unit == response.unit) {
                    var s = ' <option value="' + response.unit + '" data-type="other" selected>' + response.unit + '</option>';
                    s += ' <option value="' + response.unit_swap + '" data-type="other">' + response.unit_swap + '</option>';
                    $("#unit_product_swap").html(s);

                } else {
                    var s = ' <option value="' + response.unit + '" data-type="other">' + response.unit + '</option>';
                    s += ' <option value="' + response.unit_swap + '" data-type="other" selected>' + response.unit_swap + '</option>';
                    $("#unit_product_swap").html(s);
                }
               
            }
        })
    }
</script>
